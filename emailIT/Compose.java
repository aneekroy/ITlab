/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mailclient;
import java.util.*;
import java.text.*;  
import java.net.*;
import java.io.*;
/**
 *
 * @author souvik
 */
public class Compose extends javax.swing.JFrame {

    /**
     * Creates new form Compose
     */
    String ip, id;
    String terminal;

    private HashMap<String, Integer> send_socket;
    public Compose(String ip, String id) {
        this.ip=ip;
        this.id=id;
        terminal="";
        initComponents();
        send_socket=new HashMap<>();
        send_socket.put("gmail.com", 2500);
        send_socket.put("sinju.com", 2600);
        field_from.setText(id);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        field_to = new javax.swing.JTextField();
        field_from = new javax.swing.JTextField();
        field_sub = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        field_message = new javax.swing.JTextArea();
        button_send = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        jLabel3.setText("jLabel3");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("From: ");

        jLabel2.setText("To:");

        jLabel4.setText("Subject:");

        field_from.setEditable(false);

        field_message.setColumns(20);
        field_message.setRows(5);
        jScrollPane1.setViewportView(field_message);

        button_send.setText("Send");
        button_send.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_sendActionPerformed(evt);
            }
        });

        jButton1.setText("Close");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 449, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(field_to)
                            .addComponent(field_from)
                            .addComponent(field_sub)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(button_send)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(field_from, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(field_to, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(field_sub, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(button_send)
                    .addComponent(jButton1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void button_sendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_sendActionPerformed
        send_mail();
    }//GEN-LAST:event_button_sendActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    public void error(){
        
        javax.swing.JOptionPane.showMessageDialog(null, "error", "Message", javax.swing.JOptionPane.INFORMATION_MESSAGE);
        dispose();
    }
    public void send_mail(){
        
        try{
           
            int ind=field_from.getText().indexOf("@");
            Socket socket=new Socket(ip, send_socket.get(field_from.getText().substring(ind+1)));
            DataInputStream inp=new DataInputStream(socket.getInputStream());
            DataOutputStream oup=new DataOutputStream(socket.getOutputStream());
            String line=inp.readUTF();
            System.out.println("Server: "+line+"\n");
            System.out.println("Client: "+"verifying domain\n");
            int i=id.indexOf("@");
            String client_domain=id.substring(i+1);
            line="HELO "+"client";
            oup.writeUTF(line);
            System.out.println("Client: "+line+"\n");
            line=inp.readUTF();
            System.out.println("Server: "+line+"\n");
            if(Integer.parseInt(line.substring(0, 3))!=250)             
                error();
            line="MAIL FROM:"+id;
            oup.writeUTF(line);
            System.out.println("Client: "+line+"\n");
            line=inp.readUTF();
            System.out.println("Server: "+line+"\n");
            if(Integer.parseInt(line.substring(0, 3))!=250)
                error();
            String to[]=field_to.getText().split(";");
            for(String tok:to){
                
                line="RCPT TO:"+tok;
                oup.writeUTF(line);
                System.out.println("Client: "+line+"\n");
                line=inp.readUTF();
                System.out.println("Server: "+line+"\n");
                if(Integer.parseInt(line.substring(0, 3))!=250)             
                    error();
            }
            line="DATA";
            oup.writeUTF(line);
            System.out.println("Client: "+line+"\n");
            line=inp.readUTF();
            System.out.println("Server: "+line+"\n");
            if(Integer.parseInt(line.substring(0, 3))!=354)             
                error();
            i=line.indexOf("<CR><LF>");
            char data_end_char=line.charAt(i+8);
            /*sending data*/
            
            line="FROM: "+id+"\n";
            oup.writeUTF(line);
            System.out.println("Client: "+line);
            line="TO: "+field_to.getText()+"\n";
            oup.writeUTF(line);
            System.out.println("Client: "+line);
            DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
            Date date = new Date();
            line="Date: "+dateFormat.format(date)+"\n"; 
            oup.writeUTF(line);
            System.out.println("Client: "+line);
            line="Subject: "+field_sub.getText()+"\n";
            oup.writeUTF(line);
            System.out.println("Client: "+line);
            String lines[]=field_message.getText().split("\n");
            for(String t: lines){
                
                if(t.startsWith(String.valueOf(data_end_char)))
                    t=data_end_char+t;
                t=t+'\n';
                oup.writeUTF(t);
                System.out.println("Client: "+t);
            }
            line=String.valueOf(data_end_char)+'\n';
            oup.writeUTF(line);
            System.out.println("Client: "+line);
            line=inp.readUTF();
            if(Integer.parseInt(line.substring(0, 3))!=250)             
                error();
            System.out.println("Server: "+line+"\n");
            line="QUIT";
            oup.writeUTF(line);
            System.out.println("Client: "+line+"\n");
            line=inp.readUTF();
            if(Integer.parseInt(line.substring(0, 3))!=221)             
                error();
            inp.close();
            oup.close();
            socket.close();
           
       }
       catch(Exception e){
           
           System.out.println(e);
       }
    }
      

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton button_send;
    private javax.swing.JTextField field_from;
    private javax.swing.JTextArea field_message;
    private javax.swing.JTextField field_sub;
    private javax.swing.JTextField field_to;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
